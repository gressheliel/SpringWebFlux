services:

  mongodb:
    image: mongo:8.0.8
    restart: always
    container_name: eats-catalog
    environment:
      MONGO_INITDB_ROOT_USERNAME: master
      MONGO_INITDB_ROOT_PASSWORD: debuggeandoideas
      MONGO_INITDB_DATABASE: catalog
    ports:
      - "27017:27017"
    volumes:
      - ./db/mongo/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - eats-network

  redis:
    image: redis:7.4.1-alpine
    restart: always
    container_name: eats-redis
    ports:
      - "6379:6379"
    command: redis-server --requirepass debuggeandoideas
    networks:
      - eats-network

  redis-commander:
    image: rediscommander/redis-commander:latest
    restart: always
    container_name: eats-redis-ui
    environment:
      - REDIS_HOSTS=local:redis:6379:0:debuggeandoideas
      - HTTP_USER=admin
      - HTTP_PASSWORD=debuggeandoideas
    ports:
      - "8081:8081"
    depends_on:
      - redis
    networks:
      - eats-network

  kafka:
    image: bitnami/kafka:4.0.0
    container_name: kafka-broker
    restart: always
    environment:
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - KAFKA_KRAFT_CLUSTER_ID=V1StGXR8_Z5jdHi6B-myTA
      - KAFKA_CFG_LISTENERS=PLAINTEXT_INTERNAL://:29092,PLAINTEXT_EXTERNAL://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT_INTERNAL://kafka:29092,PLAINTEXT_EXTERNAL://localhost:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT_INTERNAL:PLAINTEXT,PLAINTEXT_EXTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT_INTERNAL
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_CFG_DELETE_TOPIC_ENABLE=true
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LOG_RETENTION_HOURS=1
    ports:
      - "9092:9092"
      - "29092:29092"
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics.sh --bootstrap-server localhost:9092 --list"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
      - eats-network

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    restart: always
    depends_on:
      - kafka
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:29092
    ports:
      - "8090:8080"
    networks:
      - eats-network

  postgres:
    image: postgres:17.5
    container_name: customers-db
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: debuggeandoideas
      POSTGRES_DB: customers
    volumes:
      - ./db/sql:/docker-entrypoint-initdb.d:ro
    ports:
      - "5432:5432"
    restart: unless-stopped
    networks:
      - eats-network

networks:
  eats-network:
    driver: bridge

--- comandos para probar ---

docker exec -it kafka-broker \
  kafka-topics.sh --bootstrap-server localhost:9092 \
  --create --topic rating-events --partitions 1 --replication-factor 1


docker exec -it kafka-broker \
  kafka-console-producer.sh --bootstrap-server localhost:9092 \
  --topic rating-events


docker exec -it kafka-broker \
  kafka-console-consumer.sh --bootstrap-server localhost:9092 \
  --topic rating-events --from-beginning