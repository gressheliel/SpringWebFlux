--- [docker-compose-yml] ---
services:

  mongodb:
    image: mongo:8.0.8
    restart: always
    container_name: eats-catalog
    environment:
      MONGO_INITDB_ROOT_USERNAME: master
      MONGO_INITDB_ROOT_PASSWORD: debuggeandoideas
      MONGO_INITDB_DATABASE: catalog
    ports:
      - "27017:27017"
    volumes:
      - ./db/mongo/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - eats-network

  redis:
    image: redis:7.4.1-alpine
    restart: always
    container_name: eats-redis
    ports:
      - "6379:6379"
    command: redis-server --requirepass debuggeandoideas
    networks:
      - eats-network

  redis-commander:
    image: rediscommander/redis-commander:latest
    restart: always
    container_name: eats-redis-ui
    environment:
      - REDIS_HOSTS=local:redis:6379:0:debuggeandoideas
      - HTTP_USER=admin
      - HTTP_PASSWORD=debuggeandoideas
    ports:
      - "8081:8081"
    depends_on:
      - redis
    networks:
      - eats-network


  db:
    image: postgres:17.5
    container_name: customers-db
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: debuggeandoideas
      POSTGRES_DB: customers
    volumes:
      - ./db/sql:/docker-entrypoint-initdb.d:ro
    ports:
      - "5432:5432"
    restart: unless-stopped
    networks:
      - eats-network

networks:
  eats-network:
    driver: bridge


--- [schema.sql] ---


DROP TABLE IF EXISTS customer_role;
DROP TABLE IF EXISTS customer;
DROP TABLE IF EXISTS role;

CREATE TABLE role (
    name VARCHAR(50) PRIMARY KEY,
    description TEXT
);


CREATE TABLE customer (
    id SERIAL PRIMARY KEY,
    firstname VARCHAR(100) NOT NULL,
    enabled BOOLEAN DEFAULT TRUE,
    account_non_expired BOOLEAN DEFAULT TRUE,
    credentials_non_expired BOOLEAN DEFAULT TRUE,
    lastname VARCHAR(100) NOT NULL,
    email VARCHAR(255) UNIQUE NOT NULL,
    user_password VARCHAR(256) NOT NULL,
    age INT CHECK (age >= 0),
    birthdate DATE,
    alternative_id UUID UNIQUE
);


CREATE TABLE customer_role (
    customer_id INT REFERENCES customer(id) ON DELETE CASCADE,
    role_name VARCHAR(50) REFERENCES role(name) ON DELETE CASCADE,
    PRIMARY KEY (customer_id, role_name)
);


--- [data.sql] ---


INSERT INTO role (name, description) VALUES
  ('free_user', 'User with ads and limit rating'),
  ('premium_user', 'User without ads and no limit rate');